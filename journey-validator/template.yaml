AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  DomainName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/Journey/Validator/DomainName'
  CertificateARN:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/Journey/Validator/CertificateARN'
  TableName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/Journey/DB/TableName'
  HostedZoneId:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/Journey/Global/HostedZoneId'
  UserPoolARN:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/Journey/Users/UserPoolARN'
  APIStage:
    Type: String
    Default: 'prod'

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: journey-validator-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: journey-validator-lambda-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
              - dynamodb:Query
              - dynamodb:GetItem
            Resource:
              !Join
                - '/'
                - - 'arn:aws:dynamodb:*:*:table'
                  - !Ref TableName
          - Effect: Allow
            Action:
              - sqs:GetQueueAttributes
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Resource: !GetAtt ResourceValidatorQueue.Arn

  ValidatorAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: journey-validator-api
      StageName: !Ref APIStage
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Ref UserPoolARN

  ResourceValidatorQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: journey-resource-validator-queue

  ResourceValidator:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: journey-resource-validator
      Runtime: python3.6
      CodeUri: ./build
      Handler: resource_validator.handler
      Role: !GetAtt LambdaRole.Arn
      Events:
        ResourceQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt ResourceValidatorQueue.Arn
            BatchSize: 5
            Enabled: True
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName

  StepValidator:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: journey-step-validator
      Runtime: python3.6
      CodeUri: ./build
      Handler: step_validator.handler
      Role: !GetAtt LambdaRole.Arn
      Events:
        PostValidator:
          Type: Api
          Properties:
            RestApiId: !Ref ValidatorAPI
            Path: /validate
            Method: POST
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          QUEUE_NAME: !GetAtt ResourceValidatorQueue.QueueName

  PostCredentials:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: journey-post-credentials
      Runtime: python3.6
      CodeUri: ./build
      Handler: save_credentials.handler
      Role: !GetAtt LambdaRole.Arn
      Events:
        PostCredentials:
          Type: Api
          Properties:
            RestApiId: !Ref ValidatorAPI
            Path: /credentials
            Method: POST

  CustomDomain:
    Type: AWS::ApiGateway::DomainName
    DependsOn: ValidatorAPI
    Properties:
      DomainName: !Ref DomainName
      EndpointConfiguration:
        Types:
          - "EDGE"
      CertificateArn: !Ref CertificateARN

  CustomDomainMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref CustomDomain
      RestApiId: !Ref ValidatorAPI
      Stage: !Ref APIStage

  CustomDomainDNS:
    Type: AWS::Route53::RecordSetGroup
    DependsOn: CustomDomain
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
      - Type: A
        Name: !Ref DomainName
        AliasTarget:
          HostedZoneId: !GetAtt CustomDomain.DistributionHostedZoneId
          DNSName: !GetAtt CustomDomain.DistributionDomainName

Outputs:
  ValidatorAPIEnpoint:
    Description: "API endpoint"
    Value: !Sub "https://${ValidatorAPI}.execute-api.${AWS::Region}.amazonaws.com/$(APIStage)/"